<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns="http://www.springframework.org/schema/beans"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- <context:property-placeholder location="classpath:/jdbc.properties"/> -->



	<bean id="jdbcProperties"
		class="com.fengjr.config.utils.ConfCentrePropertyPlaceHolderConfigurer">
		<property name="appName" value="mysqlOnline" />
		<property name="ignoreUnresolvablePlaceholders" value="true"/>
		<property name="attachAppName">
			<list>
				<!-- <value>mysqlOnline</value> -->
				<value>mongodb</value>
			</list>
		</property>
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:influxdb-config.properties</value>
				<value>classpath:jetty.properties</value>
				<value>classpath:config-center.properties</value>
				<value>classpath:config-hbase.properties</value>
				<value>classpath:self.properties</value>
				<value>classpath:redis.properties</value>
				<value>classpath:upm.properties</value><!-- 此处配置才有作用 ， 在upm xml 里面配置不行 -->
			</list>
		</property>
	</bean>



	<bean id="dataSource_node1" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		p:driverClass="${jdbc.driver}" p:jdbcUrl="${mysql.pro.warning_center.url.rw}"
		p:user="${mysql.pro.warning_center.user.rw}" p:password="${mysql.pro.warning_center.pwd.rw}"
		p:minPoolSize="${business.node1.jdbc.minPoolSize}" p:maxPoolSize="${business.node1.jdbc.maxPoolSize}"
		p:initialPoolSize="${business.node1.jdbc.initialPoolSize}"
		p:maxIdleTime="${business.node1.jdbc.maxIdleTime}" p:acquireIncrement="${business.node1.jdbc.acquireIncrement}"
		p:maxStatements="${business.node1.jdbc.maxStatements}"
		p:idleConnectionTestPeriod="${business.node1.jdbc.idleConnectionTestPeriod}"
		p:acquireRetryAttempts="${business.node1.jdbc.acquireRetryAttempts}"
		p:breakAfterAcquireFailure="${business.node1.jdbc.breakAfterAcquireFailure}"
		p:testConnectionOnCheckout="${business.node1.jdbc.testConnectionOnCheckout}" />

	<bean id="dataSource_node2" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		p:driverClass="${jdbc.driver}" p:jdbcUrl="${mysql.pro.schedule_monitor.url.rw}"
		p:user="${mysql.pro.schedule_monitor.user.rw}" p:password="${mysql.pro.schedule_monitor.pwd.rw}"
		p:minPoolSize="${business.node1.jdbc.minPoolSize}" p:maxPoolSize="${business.node1.jdbc.maxPoolSize}"
		p:initialPoolSize="${business.node1.jdbc.initialPoolSize}"
		p:maxIdleTime="${business.node1.jdbc.maxIdleTime}" p:acquireIncrement="${business.node1.jdbc.acquireIncrement}"
		p:maxStatements="${business.node1.jdbc.maxStatements}"
		p:idleConnectionTestPeriod="${business.node1.jdbc.idleConnectionTestPeriod}"
		p:acquireRetryAttempts="${business.node1.jdbc.acquireRetryAttempts}"
		p:breakAfterAcquireFailure="${business.node1.jdbc.breakAfterAcquireFailure}"
		p:testConnectionOnCheckout="${business.node1.jdbc.testConnectionOnCheckout}" />

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource_node1" />
		<property name="mapperLocations">
			<value>classpath:mapper/*.xml</value>
		</property>
<!-- 		<property name="plugins" ref="mybatisInterceptor" /> -->
	</bean>
	
<!-- 	<bean id="mybatisInterceptor" class="com.feng.sauron.tracerImpl.test.TestInterceptor"/> -->

	<bean id="daoMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.feng.sauron.warning.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource_node1" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />





	<bean id="sqlSessionFactory2" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource_node2" />
		<property name="mapperLocations">
			<value>classpath:mapper_2/*.xml</value>
		</property>
	</bean>

	<bean id="daoMapperScannerConfigurer2" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.feng.sauron.warning.dao2" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory2" />
	</bean>


	<bean id="transactionManager2"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource_node2" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager2" />



	<context:component-scan base-package="com.fengjr.sauron" />


	<bean id="mongoFactory" class="com.fengjr.sauron.dao.mongodb.MongoFactory">
		<property name="configMap">
			<map>
				<entry key="sauron" value-ref="mongosConfig1"></entry>
			</map>
		</property>
	</bean>

	<bean id="mongosConfig1" class="com.fengjr.sauron.dao.mongodb.MongoConfig">
		<property name="mongosAddr">
			<list>
<!-- 				<value>${mongo.pro.SAURON.url.rw}</value> -->
				<value>${mongo.node1}</value>
				<value>${mongo.node2}</value>
				<value>${mongo.node3}</value>
			</list>
		</property>
		<property name="dbName">
			<value>SAURON</value>
			<!-- <value>${mongo.pro.SAURON.db.rw}</value> -->
		</property>
<!-- 		<property name="user"> -->
<!-- 			<value>${mongo.pro.SAURON.user.rw}</value> -->
<!-- 		</property> -->
<!-- 		<property name="pass"> -->
<!-- 			<value>${mongo.pro.SAURON.pwd.rw}</value> -->
<!-- 		</property> -->
		<property name="collectionNames">
			<set>
				<value>metrics_ori_data</value>
				<value>metrics_ori_data_codebulk</value>
				<value>metrics_ori_data_codebulk_alarm</value>
			</set>
		</property>
	</bean>



	<bean id="startDam" class="com.feng.sauron.warning.monitor.dubbo.StartDam"
		init-method="init" destroy-method="close">
	</bean>

</beans>
