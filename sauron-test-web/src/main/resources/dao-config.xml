<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">



	<bean id="jdbcProperties"
		class="com.fengjr.config.utils.ConfCentrePropertyPlaceHolderConfigurer">
		<property name="appName" value="mysqlOnline" />
		<property name="attachAppName">
			<list>
				<!-- <value>mysqlOnline</value> -->
				<value>mongodb</value>
			</list>
		</property>
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:config-center.properties</value>
			</list>
		</property>
	</bean>



	<bean id="dataSource_node1" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		p:driverClass="${jdbc.driver}" p:jdbcUrl="${mysql.pro.warning_center.url.rw}"
		p:user="${mysql.pro.warning_center.user.rw}" p:password="${mysql.pro.warning_center.pwd.rw}"
		p:minPoolSize="${business.node1.jdbc.minPoolSize}" p:maxPoolSize="${business.node1.jdbc.maxPoolSize}"
		p:initialPoolSize="${business.node1.jdbc.initialPoolSize}"
		p:maxIdleTime="${business.node1.jdbc.maxIdleTime}" p:acquireIncrement="${business.node1.jdbc.acquireIncrement}"
		p:maxStatements="${business.node1.jdbc.maxStatements}"
		p:idleConnectionTestPeriod="${business.node1.jdbc.idleConnectionTestPeriod}"
		p:acquireRetryAttempts="${business.node1.jdbc.acquireRetryAttempts}"
		p:breakAfterAcquireFailure="${business.node1.jdbc.breakAfterAcquireFailure}"
		p:testConnectionOnCheckout="${business.node1.jdbc.testConnectionOnCheckout}" />



	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource_node1" />
		<property name="mapperLocations">
			<value>classpath:mapper/*.xml</value>
		</property>
	</bean>


	<bean id="daoMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.fengjr.sauron.test.web.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource_node1" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<context:component-scan base-package="com.fengjr.sauron" />

</beans>
